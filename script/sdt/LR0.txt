==>> state: 0
PROGRAM_ ->  . PROGRAM  index: 0 1    goto: 1
PROGRAM ->  . STATEMENTLIST  index: 0 1    goto: 20
STATEMENTLIST ->  . STATEMENT LABEL STATEMENTLIST  index: 0 3    goto: 4
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 1
PROGRAM_ -> PROGRAM .   index: 1 1    goto: -2
Reduce: PROGRAM_ -> PROGRAM
==>> state: 2
STATEMENTNO -> VARIABLE . = ASSIGN  index: 1 3    goto: 33
VARIABLELIST -> VARIABLE .   index: 1 1    goto: -2
VARIABLELIST -> VARIABLE . , VARIABLELIST  index: 1 3    goto: 36
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 35
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 35
PARTEXPR -> VARIABLE .   index: 1 1    goto: -2
PARTEXPR -> VARIABLE . ( EXPRESSIONLIST )  index: 1 4    goto: 34
Reduce: VARIABLELIST -> VARIABLE
Reduce: PARTEXPR -> VARIABLE
==>> state: 3
STATEMENTNO -> VARIABLELIST .   index: 1 1    goto: -2
Reduce: STATEMENTNO -> VARIABLELIST
==>> state: 4
STATEMENTLIST -> STATEMENT . LABEL STATEMENTLIST  index: 1 3    goto: 37
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 5
STATEMENT -> STATEMENTNO .   index: 1 1    goto: -2
STATEMENT -> STATEMENTNO . ;  index: 1 2    goto: 38
Reduce: STATEMENT -> STATEMENTNO
==>> state: 6
STATEMENTNO -> IFSTMT .   index: 1 1    goto: -2
Reduce: STATEMENTNO -> IFSTMT
==>> state: 7
STATEMENTNO -> FORSTMT .   index: 1 1    goto: -2
Reduce: STATEMENTNO -> FORSTMT
==>> state: 8
EXPRESSIONLIST -> EXPRESSION .   index: 1 1    goto: -2
EXPRESSIONLIST -> EXPRESSION . , EXPRESSIONLIST  index: 1 3    goto: 39
Reduce: EXPRESSIONLIST -> EXPRESSION
==>> state: 9
VARIABLE -> TYPE . IDENTIFIER  index: 1 2    goto: 40
==>> state: 10
TYPE -> INTEGER .   index: 1 1    goto: -2
Reduce: TYPE -> INTEGER
==>> state: 11
PARTEXPR -> INT .   index: 1 1    goto: -2
Reduce: PARTEXPR -> INT
==>> state: 12
TYPE -> DOUBLE .   index: 1 1    goto: -2
Reduce: TYPE -> DOUBLE
==>> state: 13
PARTEXPR -> FLOAT .   index: 1 1    goto: -2
Reduce: PARTEXPR -> FLOAT
==>> state: 14
PARTEXPR -> IDENTIFIER .   index: 1 1    goto: -2
Reduce: PARTEXPR -> IDENTIFIER
==>> state: 15
IFSTMT -> IF . ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 1 9    goto: 41
==>> state: 16
STATEMENTNO -> REPEAT . { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 1 10    goto: 42
==>> state: 17
FORSTMT -> FOR . ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 1 13    goto: 43
==>> state: 18
STATEMENTNO -> BREAK .   index: 1 1    goto: -2
Reduce: STATEMENTNO -> BREAK
==>> state: 19
STATEMENTNO -> RETURN . EXPRESSION  index: 1 2    goto: 45
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 20
PROGRAM -> STATEMENTLIST .   index: 1 1    goto: -2
Reduce: PROGRAM -> STATEMENTLIST
==>> state: 21
STATEMENTNO -> EXPRESSIONLIST .   index: 1 1    goto: -2
Reduce: STATEMENTNO -> EXPRESSIONLIST
==>> state: 22
EXPRESSION -> COMPUTEEXPR .   index: 1 1    goto: -2
COMPAREEXPR -> COMPUTEEXPR . < COMPUTEEXPR  index: 1 3    goto: 46
COMPAREEXPR -> COMPUTEEXPR . > COMPUTEEXPR  index: 1 3    goto: 47
COMPAREEXPR -> COMPUTEEXPR . <= COMPUTEEXPR  index: 1 3    goto: 48
COMPAREEXPR -> COMPUTEEXPR . >= COMPUTEEXPR  index: 1 3    goto: 49
COMPAREEXPR -> COMPUTEEXPR . == COMPUTEEXPR  index: 1 3    goto: 50
COMPAREEXPR -> COMPUTEEXPR . != COMPUTEEXPR  index: 1 3    goto: 51
Reduce: EXPRESSION -> COMPUTEEXPR
==>> state: 23
CONDITION -> COMPAREEXPR .   index: 1 1    goto: -2
BOOLEXPR -> COMPAREEXPR . && LABEL COMPAREEXPR  index: 1 4    goto: 52
BOOLEXPR -> COMPAREEXPR . || LABEL COMPAREEXPR  index: 1 4    goto: 53
Reduce: CONDITION -> COMPAREEXPR
==>> state: 24
EXPRESSION -> CONDITION .   index: 1 1    goto: -2
Reduce: EXPRESSION -> CONDITION
==>> state: 25
EXPRESSION -> PARTEXPR .   index: 1 1    goto: -2
PARTEXPR -> PARTEXPR . = PARTEXPR  index: 1 3    goto: 54
INCEXPR -> PARTEXPR .   index: 1 1    goto: -2
INCEXPR -> PARTEXPR . ++  index: 1 2    goto: 55
INCEXPR -> PARTEXPR . --  index: 1 2    goto: 56
MULEXPR -> PARTEXPR .   index: 1 1    goto: -2
Reduce: EXPRESSION -> PARTEXPR
Reduce: INCEXPR -> PARTEXPR
Reduce: MULEXPR -> PARTEXPR
==>> state: 26
COMPUTEEXPR -> SUMEXPR .   index: 1 1    goto: -2
SUMEXPR -> SUMEXPR . + MULEXPR  index: 1 3    goto: 57
SUMEXPR -> SUMEXPR . - MULEXPR  index: 1 3    goto: 58
Reduce: COMPUTEEXPR -> SUMEXPR
==>> state: 27
SUMEXPR -> MULEXPR .   index: 1 1    goto: -2
MULEXPR -> MULEXPR . * PARTEXPR  index: 1 3    goto: 59
MULEXPR -> MULEXPR . / PARTEXPR  index: 1 3    goto: 60
Reduce: SUMEXPR -> MULEXPR
==>> state: 28
COMPUTEEXPR -> INCEXPR .   index: 1 1    goto: -2
Reduce: COMPUTEEXPR -> INCEXPR
==>> state: 29
CONDITION -> BOOLEXPR .   index: 1 1    goto: -2
BOOLEXPR -> BOOLEXPR . BOOLEXPR  index: 1 2    goto: 64
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 62
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 62
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 64
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: CONDITION -> BOOLEXPR
Reduce: TYPE -> EPSILON
==>> state: 30
STATEMENTNO -> DO . { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 1 10    goto: 65
==>> state: 31
PARTEXPR -> ( . EXPRESSION )  index: 1 3    goto: 66
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 32
STATEMENTNO -> # .   index: 1 1    goto: -2
Reduce: STATEMENTNO -> #
==>> state: 33
STATEMENTNO -> VARIABLE = . ASSIGN  index: 2 3    goto: 71
ASSIGN ->  . INT  index: 0 1    goto: 70
ASSIGN ->  . EXPRESSION  index: 0 1    goto: 69
ASSIGN ->  . FUN  index: 0 1    goto: 67
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
FUN ->  . FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 68
FUN ->  . FUNCTION ( EXPRESSIONLIST )  index: 0 4    goto: 68
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 70
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 34
PARTEXPR -> VARIABLE ( . EXPRESSIONLIST )  index: 2 4    goto: 72
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 35
VARIABLE -> VARIABLE [ . INDEX ]  index: 2 4    goto: 75
VARIABLE -> VARIABLE [ . INDEX ] [ INDEX ]  index: 2 7    goto: 75
INDEX ->  . INT  index: 0 1    goto: 74
INDEX ->  . VARIABLE  index: 0 1    goto: 73
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 73
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 73
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 36
VARIABLELIST -> VARIABLE , . VARIABLELIST  index: 2 3    goto: 77
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 76
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 76
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 76
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 76
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 37
STATEMENTLIST -> STATEMENT LABEL . STATEMENTLIST  index: 2 3    goto: 78
STATEMENTLIST ->  . STATEMENT LABEL STATEMENTLIST  index: 0 3    goto: 4
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 38
STATEMENT -> STATEMENTNO ; .   index: 2 2    goto: -2
Reduce: STATEMENT -> STATEMENTNO ;
==>> state: 39
EXPRESSIONLIST -> EXPRESSION , . EXPRESSIONLIST  index: 2 3    goto: 79
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 40
VARIABLE -> TYPE IDENTIFIER .   index: 2 2    goto: -2
Reduce: VARIABLE -> TYPE IDENTIFIER
==>> state: 41
IFSTMT -> IF ( . CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 2 9    goto: 80
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 42
STATEMENTNO -> REPEAT { . LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 2 10    goto: 81
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 43
FORSTMT -> FOR ( . EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 2 13    goto: 82
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 44
PARTEXPR -> VARIABLE .   index: 1 1    goto: -2
PARTEXPR -> VARIABLE . ( EXPRESSIONLIST )  index: 1 4    goto: 34
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 35
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 35
Reduce: PARTEXPR -> VARIABLE
==>> state: 45
STATEMENTNO -> RETURN EXPRESSION .   index: 2 2    goto: -2
Reduce: STATEMENTNO -> RETURN EXPRESSION
==>> state: 46
COMPAREEXPR -> COMPUTEEXPR < . COMPUTEEXPR  index: 2 3    goto: 83
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 47
COMPAREEXPR -> COMPUTEEXPR > . COMPUTEEXPR  index: 2 3    goto: 84
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 48
COMPAREEXPR -> COMPUTEEXPR <= . COMPUTEEXPR  index: 2 3    goto: 85
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 49
COMPAREEXPR -> COMPUTEEXPR >= . COMPUTEEXPR  index: 2 3    goto: 86
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 50
COMPAREEXPR -> COMPUTEEXPR == . COMPUTEEXPR  index: 2 3    goto: 87
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 51
COMPAREEXPR -> COMPUTEEXPR != . COMPUTEEXPR  index: 2 3    goto: 88
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 52
BOOLEXPR -> COMPAREEXPR && . LABEL COMPAREEXPR  index: 2 4    goto: 89
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 53
BOOLEXPR -> COMPAREEXPR || . LABEL COMPAREEXPR  index: 2 4    goto: 90
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 54
PARTEXPR -> PARTEXPR = . PARTEXPR  index: 2 3    goto: 91
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 91
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 55
INCEXPR -> PARTEXPR ++ .   index: 2 2    goto: -2
Reduce: INCEXPR -> PARTEXPR ++
==>> state: 56
INCEXPR -> PARTEXPR -- .   index: 2 2    goto: -2
Reduce: INCEXPR -> PARTEXPR --
==>> state: 57
SUMEXPR -> SUMEXPR + . MULEXPR  index: 2 3    goto: 93
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 93
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 93
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 92
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 92
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 58
SUMEXPR -> SUMEXPR - . MULEXPR  index: 2 3    goto: 94
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 94
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 94
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 92
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 92
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 59
MULEXPR -> MULEXPR * . PARTEXPR  index: 2 3    goto: 95
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 95
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 60
MULEXPR -> MULEXPR / . PARTEXPR  index: 2 3    goto: 96
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 96
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 61
COMPAREEXPR -> COMPUTEEXPR . < COMPUTEEXPR  index: 1 3    goto: 46
COMPAREEXPR -> COMPUTEEXPR . > COMPUTEEXPR  index: 1 3    goto: 47
COMPAREEXPR -> COMPUTEEXPR . <= COMPUTEEXPR  index: 1 3    goto: 48
COMPAREEXPR -> COMPUTEEXPR . >= COMPUTEEXPR  index: 1 3    goto: 49
COMPAREEXPR -> COMPUTEEXPR . == COMPUTEEXPR  index: 1 3    goto: 50
COMPAREEXPR -> COMPUTEEXPR . != COMPUTEEXPR  index: 1 3    goto: 51
==>> state: 62
BOOLEXPR -> COMPAREEXPR . && LABEL COMPAREEXPR  index: 1 4    goto: 52
BOOLEXPR -> COMPAREEXPR . || LABEL COMPAREEXPR  index: 1 4    goto: 53
==>> state: 63
INCEXPR -> PARTEXPR .   index: 1 1    goto: -2
INCEXPR -> PARTEXPR . ++  index: 1 2    goto: 55
INCEXPR -> PARTEXPR . --  index: 1 2    goto: 56
MULEXPR -> PARTEXPR .   index: 1 1    goto: -2
PARTEXPR -> PARTEXPR . = PARTEXPR  index: 1 3    goto: 54
Reduce: INCEXPR -> PARTEXPR
Reduce: MULEXPR -> PARTEXPR
==>> state: 64
BOOLEXPR -> BOOLEXPR BOOLEXPR .   index: 2 2    goto: -2
BOOLEXPR -> BOOLEXPR . BOOLEXPR  index: 1 2    goto: 64
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 62
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 62
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 64
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: BOOLEXPR -> BOOLEXPR BOOLEXPR
Reduce: TYPE -> EPSILON
==>> state: 65
STATEMENTNO -> DO { . LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 2 10    goto: 97
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 66
PARTEXPR -> ( EXPRESSION . )  index: 2 3    goto: 98
==>> state: 67
ASSIGN -> FUN .   index: 1 1    goto: -2
Reduce: ASSIGN -> FUN
==>> state: 68
FUN -> FUNCTION . ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 1 7    goto: 99
FUN -> FUNCTION . ( EXPRESSIONLIST )  index: 1 4    goto: 99
==>> state: 69
ASSIGN -> EXPRESSION .   index: 1 1    goto: -2
Reduce: ASSIGN -> EXPRESSION
==>> state: 70
ASSIGN -> INT .   index: 1 1    goto: -2
PARTEXPR -> INT .   index: 1 1    goto: -2
Reduce: ASSIGN -> INT
Reduce: PARTEXPR -> INT
==>> state: 71
STATEMENTNO -> VARIABLE = ASSIGN .   index: 3 3    goto: -2
Reduce: STATEMENTNO -> VARIABLE = ASSIGN
==>> state: 72
PARTEXPR -> VARIABLE ( EXPRESSIONLIST . )  index: 3 4    goto: 100
==>> state: 73
INDEX -> VARIABLE .   index: 1 1    goto: -2
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 35
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 35
Reduce: INDEX -> VARIABLE
==>> state: 74
INDEX -> INT .   index: 1 1    goto: -2
Reduce: INDEX -> INT
==>> state: 75
VARIABLE -> VARIABLE [ INDEX . ]  index: 3 4    goto: 101
VARIABLE -> VARIABLE [ INDEX . ] [ INDEX ]  index: 3 7    goto: 101
==>> state: 76
VARIABLELIST -> VARIABLE .   index: 1 1    goto: -2
VARIABLELIST -> VARIABLE . , VARIABLELIST  index: 1 3    goto: 36
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 35
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 35
Reduce: VARIABLELIST -> VARIABLE
==>> state: 77
VARIABLELIST -> VARIABLE , VARIABLELIST .   index: 3 3    goto: -2
Reduce: VARIABLELIST -> VARIABLE , VARIABLELIST
==>> state: 78
STATEMENTLIST -> STATEMENT LABEL STATEMENTLIST .   index: 3 3    goto: -2
Reduce: STATEMENTLIST -> STATEMENT LABEL STATEMENTLIST
==>> state: 79
EXPRESSIONLIST -> EXPRESSION , EXPRESSIONLIST .   index: 3 3    goto: -2
Reduce: EXPRESSIONLIST -> EXPRESSION , EXPRESSIONLIST
==>> state: 80
IFSTMT -> IF ( CONDITION . ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 3 9    goto: 102
==>> state: 81
STATEMENTNO -> REPEAT { LABEL . STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 3 10    goto: 103
STATEMENTLIST ->  . STATEMENT LABEL STATEMENTLIST  index: 0 3    goto: 4
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 82
FORSTMT -> FOR ( EXPRESSION . ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 3 13    goto: 104
==>> state: 83
COMPAREEXPR -> COMPUTEEXPR < COMPUTEEXPR .   index: 3 3    goto: -2
Reduce: COMPAREEXPR -> COMPUTEEXPR < COMPUTEEXPR
==>> state: 84
COMPAREEXPR -> COMPUTEEXPR > COMPUTEEXPR .   index: 3 3    goto: -2
Reduce: COMPAREEXPR -> COMPUTEEXPR > COMPUTEEXPR
==>> state: 85
COMPAREEXPR -> COMPUTEEXPR <= COMPUTEEXPR .   index: 3 3    goto: -2
Reduce: COMPAREEXPR -> COMPUTEEXPR <= COMPUTEEXPR
==>> state: 86
COMPAREEXPR -> COMPUTEEXPR >= COMPUTEEXPR .   index: 3 3    goto: -2
Reduce: COMPAREEXPR -> COMPUTEEXPR >= COMPUTEEXPR
==>> state: 87
COMPAREEXPR -> COMPUTEEXPR == COMPUTEEXPR .   index: 3 3    goto: -2
Reduce: COMPAREEXPR -> COMPUTEEXPR == COMPUTEEXPR
==>> state: 88
COMPAREEXPR -> COMPUTEEXPR != COMPUTEEXPR .   index: 3 3    goto: -2
Reduce: COMPAREEXPR -> COMPUTEEXPR != COMPUTEEXPR
==>> state: 89
BOOLEXPR -> COMPAREEXPR && LABEL . COMPAREEXPR  index: 3 4    goto: 105
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 90
BOOLEXPR -> COMPAREEXPR || LABEL . COMPAREEXPR  index: 3 4    goto: 106
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 91
PARTEXPR -> PARTEXPR = PARTEXPR .   index: 3 3    goto: -2
PARTEXPR -> PARTEXPR . = PARTEXPR  index: 1 3    goto: 54
Reduce: PARTEXPR -> PARTEXPR = PARTEXPR
==>> state: 92
MULEXPR -> PARTEXPR .   index: 1 1    goto: -2
PARTEXPR -> PARTEXPR . = PARTEXPR  index: 1 3    goto: 54
Reduce: MULEXPR -> PARTEXPR
==>> state: 93
SUMEXPR -> SUMEXPR + MULEXPR .   index: 3 3    goto: -2
MULEXPR -> MULEXPR . * PARTEXPR  index: 1 3    goto: 59
MULEXPR -> MULEXPR . / PARTEXPR  index: 1 3    goto: 60
Reduce: SUMEXPR -> SUMEXPR + MULEXPR
==>> state: 94
SUMEXPR -> SUMEXPR - MULEXPR .   index: 3 3    goto: -2
MULEXPR -> MULEXPR . * PARTEXPR  index: 1 3    goto: 59
MULEXPR -> MULEXPR . / PARTEXPR  index: 1 3    goto: 60
Reduce: SUMEXPR -> SUMEXPR - MULEXPR
==>> state: 95
MULEXPR -> MULEXPR * PARTEXPR .   index: 3 3    goto: -2
PARTEXPR -> PARTEXPR . = PARTEXPR  index: 1 3    goto: 54
Reduce: MULEXPR -> MULEXPR * PARTEXPR
==>> state: 96
MULEXPR -> MULEXPR / PARTEXPR .   index: 3 3    goto: -2
PARTEXPR -> PARTEXPR . = PARTEXPR  index: 1 3    goto: 54
Reduce: MULEXPR -> MULEXPR / PARTEXPR
==>> state: 97
STATEMENTNO -> DO { LABEL . STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 3 10    goto: 107
STATEMENTLIST ->  . STATEMENT LABEL STATEMENTLIST  index: 0 3    goto: 4
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 98
PARTEXPR -> ( EXPRESSION ) .   index: 3 3    goto: -2
Reduce: PARTEXPR -> ( EXPRESSION )
==>> state: 99
FUN -> FUNCTION ( . EXPRESSIONLIST ) { STATEMENTLIST }  index: 2 7    goto: 108
FUN -> FUNCTION ( . EXPRESSIONLIST )  index: 2 4    goto: 108
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 100
PARTEXPR -> VARIABLE ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: PARTEXPR -> VARIABLE ( EXPRESSIONLIST )
==>> state: 101
VARIABLE -> VARIABLE [ INDEX ] .   index: 4 4    goto: -2
VARIABLE -> VARIABLE [ INDEX ] . [ INDEX ]  index: 4 7    goto: 109
Reduce: VARIABLE -> VARIABLE [ INDEX ]
==>> state: 102
IFSTMT -> IF ( CONDITION ) . LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 4 9    goto: 110
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 103
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST . } UNTIL ( LABEL CONDITION )  index: 4 10    goto: 111
==>> state: 104
FORSTMT -> FOR ( EXPRESSION ; . LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 4 13    goto: 112
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 105
BOOLEXPR -> COMPAREEXPR && LABEL COMPAREEXPR .   index: 4 4    goto: -2
Reduce: BOOLEXPR -> COMPAREEXPR && LABEL COMPAREEXPR
==>> state: 106
BOOLEXPR -> COMPAREEXPR || LABEL COMPAREEXPR .   index: 4 4    goto: -2
Reduce: BOOLEXPR -> COMPAREEXPR || LABEL COMPAREEXPR
==>> state: 107
STATEMENTNO -> DO { LABEL STATEMENTLIST . } WHILE ( LABEL CONDITION )  index: 4 10    goto: 113
==>> state: 108
FUN -> FUNCTION ( EXPRESSIONLIST . ) { STATEMENTLIST }  index: 3 7    goto: 114
FUN -> FUNCTION ( EXPRESSIONLIST . )  index: 3 4    goto: 114
==>> state: 109
VARIABLE -> VARIABLE [ INDEX ] [ . INDEX ]  index: 5 7    goto: 115
INDEX ->  . INT  index: 0 1    goto: 74
INDEX ->  . VARIABLE  index: 0 1    goto: 73
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 73
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 73
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 110
IFSTMT -> IF ( CONDITION ) LABEL . BLOCK GOTOLABEL LABEL ELIFSTMT  index: 5 9    goto: 117
BLOCK ->  . STATEMENT  index: 0 1    goto: 116
BLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 118
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: TYPE -> EPSILON
==>> state: 111
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } . UNTIL ( LABEL CONDITION )  index: 5 10    goto: 119
==>> state: 112
FORSTMT -> FOR ( EXPRESSION ; LABEL . CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 5 13    goto: 120
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 113
STATEMENTNO -> DO { LABEL STATEMENTLIST } . WHILE ( LABEL CONDITION )  index: 5 10    goto: 121
==>> state: 114
FUN -> FUNCTION ( EXPRESSIONLIST ) . { STATEMENTLIST }  index: 4 7    goto: 122
FUN -> FUNCTION ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: FUN -> FUNCTION ( EXPRESSIONLIST )
==>> state: 115
VARIABLE -> VARIABLE [ INDEX ] [ INDEX . ]  index: 6 7    goto: 123
==>> state: 116
BLOCK -> STATEMENT .   index: 1 1    goto: -2
Reduce: BLOCK -> STATEMENT
==>> state: 117
IFSTMT -> IF ( CONDITION ) LABEL BLOCK . GOTOLABEL LABEL ELIFSTMT  index: 6 9    goto: 124
GOTOLABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: GOTOLABEL -> EPSILON
==>> state: 118
BLOCK -> { . STATEMENTLIST }  index: 1 3    goto: 125
STATEMENTLIST ->  . STATEMENT LABEL STATEMENTLIST  index: 0 3    goto: 4
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 119
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } UNTIL . ( LABEL CONDITION )  index: 6 10    goto: 126
==>> state: 120
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION . ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 6 13    goto: 127
==>> state: 121
STATEMENTNO -> DO { LABEL STATEMENTLIST } WHILE . ( LABEL CONDITION )  index: 6 10    goto: 128
==>> state: 122
FUN -> FUNCTION ( EXPRESSIONLIST ) { . STATEMENTLIST }  index: 5 7    goto: 129
STATEMENTLIST ->  . STATEMENT LABEL STATEMENTLIST  index: 0 3    goto: 4
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 123
VARIABLE -> VARIABLE [ INDEX ] [ INDEX ] .   index: 7 7    goto: -2
Reduce: VARIABLE -> VARIABLE [ INDEX ] [ INDEX ]
==>> state: 124
IFSTMT -> IF ( CONDITION ) LABEL BLOCK GOTOLABEL . LABEL ELIFSTMT  index: 7 9    goto: 130
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 125
BLOCK -> { STATEMENTLIST . }  index: 2 3    goto: 131
==>> state: 126
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } UNTIL ( . LABEL CONDITION )  index: 7 10    goto: 132
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 127
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; . LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 7 13    goto: 133
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 128
STATEMENTNO -> DO { LABEL STATEMENTLIST } WHILE ( . LABEL CONDITION )  index: 7 10    goto: 134
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 129
FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST . }  index: 6 7    goto: 135
==>> state: 130
IFSTMT -> IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL . ELIFSTMT  index: 8 9    goto: 136
ELIFSTMT ->  . ELSEIF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 138
ELIFSTMT ->  . ELSE BLOCK  index: 0 2    goto: 137
ELIFSTMT -> EPSILON .   index: 1 1    goto: -2
Reduce: ELIFSTMT -> EPSILON
==>> state: 131
BLOCK -> { STATEMENTLIST } .   index: 3 3    goto: -2
Reduce: BLOCK -> { STATEMENTLIST }
==>> state: 132
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL . CONDITION )  index: 8 10    goto: 139
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 133
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL . EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 8 13    goto: 140
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 134
STATEMENTNO -> DO { LABEL STATEMENTLIST } WHILE ( LABEL . CONDITION )  index: 8 10    goto: 141
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 135
FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST } .   index: 7 7    goto: -2
Reduce: FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST }
==>> state: 136
IFSTMT -> IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT .   index: 9 9    goto: -2
Reduce: IFSTMT -> IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT
==>> state: 137
ELIFSTMT -> ELSE . BLOCK  index: 1 2    goto: 142
BLOCK ->  . STATEMENT  index: 0 1    goto: 116
BLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 118
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: TYPE -> EPSILON
==>> state: 138
ELIFSTMT -> ELSEIF . ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 1 9    goto: 143
==>> state: 139
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION . )  index: 9 10    goto: 144
==>> state: 140
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION . GOTOLABEL ) LABEL BLOCK  index: 9 13    goto: 145
GOTOLABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: GOTOLABEL -> EPSILON
==>> state: 141
STATEMENTNO -> DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION . )  index: 9 10    goto: 146
==>> state: 142
ELIFSTMT -> ELSE BLOCK .   index: 2 2    goto: -2
Reduce: ELIFSTMT -> ELSE BLOCK
==>> state: 143
ELIFSTMT -> ELSEIF ( . CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 2 9    goto: 147
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 61
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 61
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 63
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 63
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 63
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 63
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 44
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 63
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 44
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 44
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 44
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 144
STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION ) .   index: 10 10    goto: -2
Reduce: STATEMENTNO -> REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )
==>> state: 145
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL . ) LABEL BLOCK  index: 10 13    goto: 148
==>> state: 146
STATEMENTNO -> DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION ) .   index: 10 10    goto: -2
Reduce: STATEMENTNO -> DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )
==>> state: 147
ELIFSTMT -> ELSEIF ( CONDITION . ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 3 9    goto: 149
==>> state: 148
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) . LABEL BLOCK  index: 11 13    goto: 150
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 149
ELIFSTMT -> ELSEIF ( CONDITION ) . LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 4 9    goto: 151
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 150
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL . BLOCK  index: 12 13    goto: 152
BLOCK ->  . STATEMENT  index: 0 1    goto: 116
BLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 118
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: TYPE -> EPSILON
==>> state: 151
ELIFSTMT -> ELSEIF ( CONDITION ) LABEL . BLOCK GOTOLABEL LABEL ELIFSTMT  index: 5 9    goto: 153
BLOCK ->  . STATEMENT  index: 0 1    goto: 116
BLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 118
STATEMENT ->  . STATEMENTNO  index: 0 1    goto: 5
STATEMENT ->  . STATEMENTNO ;  index: 0 2    goto: 5
STATEMENTNO ->  . VARIABLELIST  index: 0 1    goto: 3
STATEMENTNO ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENTNO ->  . EXPRESSIONLIST  index: 0 1    goto: 21
STATEMENTNO ->  . IFSTMT  index: 0 1    goto: 6
STATEMENTNO ->  . FORSTMT  index: 0 1    goto: 7
STATEMENTNO ->  . REPEAT { LABEL STATEMENTLIST } UNTIL ( LABEL CONDITION )  index: 0 10    goto: 16
STATEMENTNO ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL CONDITION )  index: 0 10    goto: 30
STATEMENTNO ->  . RETURN EXPRESSION  index: 0 2    goto: 19
STATEMENTNO ->  . BREAK  index: 0 1    goto: 18
STATEMENTNO ->  . #  index: 0 1    goto: 32
VARIABLELIST ->  . VARIABLE  index: 0 1    goto: 2
VARIABLELIST ->  . VARIABLE , VARIABLELIST  index: 0 3    goto: 2
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 9
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 8
EXPRESSIONLIST ->  . EXPRESSION , EXPRESSIONLIST  index: 0 3    goto: 8
IFSTMT ->  . IF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 15
FORSTMT ->  . FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK  index: 0 13    goto: 17
TYPE ->  . INTEGER  index: 0 1    goto: 10
TYPE ->  . DOUBLE  index: 0 1    goto: 12
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . COMPUTEEXPR  index: 0 1    goto: 22
EXPRESSION ->  . PARTEXPR  index: 0 1    goto: 25
EXPRESSION ->  . CONDITION  index: 0 1    goto: 24
COMPUTEEXPR ->  . SUMEXPR  index: 0 1    goto: 26
COMPUTEEXPR ->  . INCEXPR  index: 0 1    goto: 28
PARTEXPR ->  . VARIABLE  index: 0 1    goto: 2
PARTEXPR ->  . INT  index: 0 1    goto: 11
PARTEXPR ->  . FLOAT  index: 0 1    goto: 13
PARTEXPR ->  . IDENTIFIER  index: 0 1    goto: 14
PARTEXPR ->  . PARTEXPR = PARTEXPR  index: 0 3    goto: 25
PARTEXPR ->  . ( EXPRESSION )  index: 0 3    goto: 31
PARTEXPR ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
CONDITION ->  . COMPAREEXPR  index: 0 1    goto: 23
CONDITION ->  . BOOLEXPR  index: 0 1    goto: 29
SUMEXPR ->  . SUMEXPR + MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . SUMEXPR - MULEXPR  index: 0 3    goto: 26
SUMEXPR ->  . MULEXPR  index: 0 1    goto: 27
INCEXPR ->  . PARTEXPR  index: 0 1    goto: 25
INCEXPR ->  . PARTEXPR ++  index: 0 2    goto: 25
INCEXPR ->  . PARTEXPR --  index: 0 2    goto: 25
COMPAREEXPR ->  . COMPUTEEXPR < COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR > COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR <= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR >= COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR == COMPUTEEXPR  index: 0 3    goto: 22
COMPAREEXPR ->  . COMPUTEEXPR != COMPUTEEXPR  index: 0 3    goto: 22
BOOLEXPR ->  . COMPAREEXPR && LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . COMPAREEXPR || LABEL COMPAREEXPR  index: 0 4    goto: 23
BOOLEXPR ->  . BOOLEXPR BOOLEXPR  index: 0 2    goto: 29
MULEXPR ->  . MULEXPR * PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . MULEXPR / PARTEXPR  index: 0 3    goto: 27
MULEXPR ->  . PARTEXPR  index: 0 1    goto: 25
Reduce: TYPE -> EPSILON
==>> state: 152
FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK .   index: 13 13    goto: -2
Reduce: FORSTMT -> FOR ( EXPRESSION ; LABEL CONDITION ; LABEL EXPRESSION GOTOLABEL ) LABEL BLOCK
==>> state: 153
ELIFSTMT -> ELSEIF ( CONDITION ) LABEL BLOCK . GOTOLABEL LABEL ELIFSTMT  index: 6 9    goto: 154
GOTOLABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: GOTOLABEL -> EPSILON
==>> state: 154
ELIFSTMT -> ELSEIF ( CONDITION ) LABEL BLOCK GOTOLABEL . LABEL ELIFSTMT  index: 7 9    goto: 155
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 155
ELIFSTMT -> ELSEIF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL . ELIFSTMT  index: 8 9    goto: 156
ELIFSTMT ->  . ELSEIF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT  index: 0 9    goto: 138
ELIFSTMT ->  . ELSE BLOCK  index: 0 2    goto: 137
ELIFSTMT -> EPSILON .   index: 1 1    goto: -2
Reduce: ELIFSTMT -> EPSILON
==>> state: 156
ELIFSTMT -> ELSEIF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT .   index: 9 9    goto: -2
Reduce: ELIFSTMT -> ELSEIF ( CONDITION ) LABEL BLOCK GOTOLABEL LABEL ELIFSTMT
