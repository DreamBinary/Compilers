==>> state: 0
PROGRAM_ ->  . PROGRAM  index: 0 1    goto: 1
PROGRAM ->  . STATEMENTLIST  index: 0 1    goto: 17
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 17
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 1
PROGRAM_ -> PROGRAM .   index: 1 1    goto: -2
Reduce: PROGRAM_ -> PROGRAM
==>> state: 2
STATEMENT -> VARIABLE .   index: 1 1    goto: -2
STATEMENT -> VARIABLE . = ASSIGN  index: 1 3    goto: 23
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 25
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 25
EXPRESSION -> VARIABLE .   index: 1 1    goto: -2
EXPRESSION -> VARIABLE . ( EXPRESSIONLIST )  index: 1 4    goto: 24
Reduce: STATEMENT -> VARIABLE
Reduce: EXPRESSION -> VARIABLE
==>> state: 3
STATEMENTLIST -> STATEMENT .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> STATEMENT
==>> state: 4
STATEMENT -> IFSTMT .   index: 1 1    goto: -2
Reduce: STATEMENT -> IFSTMT
==>> state: 5
EXPRESSIONLIST -> EXPRESSION .   index: 1 1    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSIONLIST -> EXPRESSION
==>> state: 6
VARIABLE -> TYPE . IDENTIFIER  index: 1 2    goto: 41
==>> state: 7
TYPE -> INTEGER .   index: 1 1    goto: -2
Reduce: TYPE -> INTEGER
==>> state: 8
EXPRESSION -> INT .   index: 1 1    goto: -2
Reduce: EXPRESSION -> INT
==>> state: 9
TYPE -> DOUBLE .   index: 1 1    goto: -2
Reduce: TYPE -> DOUBLE
==>> state: 10
EXPRESSION -> FLOAT .   index: 1 1    goto: -2
Reduce: EXPRESSION -> FLOAT
==>> state: 11
EXPRESSION -> IDENTIFIER .   index: 1 1    goto: -2
Reduce: EXPRESSION -> IDENTIFIER
==>> state: 12
IFSTMT -> IF . ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 1 8    goto: 42
==>> state: 13
STATEMENT -> REPEAT . { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 1 8    goto: 43
==>> state: 14
STATEMENT -> FOR . ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 1 7    goto: 44
STATEMENT -> FOR . ( EXPRESSIONLISTVAR ) STATEMENT  index: 1 5    goto: 44
==>> state: 15
STATEMENT -> BREAK . ;  index: 1 2    goto: 45
==>> state: 16
STATEMENT -> RETURN . EXPRESSION  index: 1 2    goto: 47
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 47
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 47
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 47
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 17
PROGRAM -> STATEMENTLIST .   index: 1 1    goto: -2
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: PROGRAM -> STATEMENTLIST
Reduce: TYPE -> EPSILON
==>> state: 18
STATEMENT -> EXPRESSIONLIST .   index: 1 1    goto: -2
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 49
Reduce: STATEMENT -> EXPRESSIONLIST
==>> state: 19
STATEMENT -> DO . { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 1 10    goto: 50
==>> state: 20
EXPRESSION -> ( . EXPRESSION )  index: 1 3    goto: 51
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 51
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 51
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 51
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 21
STATEMENT -> ; .   index: 1 1    goto: -2
Reduce: STATEMENT -> ;
==>> state: 22
STATEMENT -> # .   index: 1 1    goto: -2
Reduce: STATEMENT -> #
==>> state: 23
STATEMENT -> VARIABLE = . ASSIGN  index: 2 3    goto: 57
ASSIGN ->  . INT  index: 0 1    goto: 55
ASSIGN ->  . EXPRESSION  index: 0 1    goto: 54
ASSIGN ->  . IDENTIFIER ( EXPRESSIONLIST )  index: 0 4    goto: 56
ASSIGN ->  . FUN  index: 0 1    goto: 52
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 55
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 56
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 54
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 54
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 54
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
FUN ->  . FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 53
FUN ->  . FUNCTION ( EXPRESSIONLIST )  index: 0 4    goto: 53
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 24
EXPRESSION -> VARIABLE ( . EXPRESSIONLIST )  index: 2 4    goto: 58
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 58
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 25
VARIABLE -> VARIABLE [ . INDEX ]  index: 2 4    goto: 61
VARIABLE -> VARIABLE [ . INDEX ] [ INDEX ]  index: 2 7    goto: 61
INDEX ->  . INT  index: 0 1    goto: 60
INDEX ->  . VARIABLE  index: 0 1    goto: 59
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 59
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 59
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 26
EXPRESSION -> EXPRESSION = . EXPRESSION  index: 2 3    goto: 62
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 62
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 62
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 62
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 27
EXPRESSION -> EXPRESSION + . EXPRESSION  index: 2 3    goto: 63
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 63
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 63
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 63
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 28
EXPRESSION -> EXPRESSION - . EXPRESSION  index: 2 3    goto: 64
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 64
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 64
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 64
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 29
EXPRESSION -> EXPRESSION * . EXPRESSION  index: 2 3    goto: 65
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 65
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 65
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 65
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 30
EXPRESSION -> EXPRESSION / . EXPRESSION  index: 2 3    goto: 66
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 66
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 66
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 66
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 31
EXPRESSION -> EXPRESSION < . EXPRESSION  index: 2 3    goto: 67
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 67
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 67
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 67
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 32
EXPRESSION -> EXPRESSION > . EXPRESSION  index: 2 3    goto: 68
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 68
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 68
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 68
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 33
EXPRESSION -> EXPRESSION <= . EXPRESSION  index: 2 3    goto: 69
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 69
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 69
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 34
EXPRESSION -> EXPRESSION >= . EXPRESSION  index: 2 3    goto: 70
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 70
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 70
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 35
EXPRESSION -> EXPRESSION == . EXPRESSION  index: 2 3    goto: 71
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 71
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 71
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 36
EXPRESSION -> EXPRESSION != . EXPRESSION  index: 2 3    goto: 72
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 72
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 72
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 37
EXPRESSION -> EXPRESSION && . EXPRESSION  index: 2 3    goto: 73
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 73
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 73
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 38
EXPRESSION -> EXPRESSION || . EXPRESSION  index: 2 3    goto: 74
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 74
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 74
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 39
EXPRESSION -> EXPRESSION ++ .   index: 2 2    goto: -2
Reduce: EXPRESSION -> EXPRESSION ++
==>> state: 40
EXPRESSION -> EXPRESSION -- .   index: 2 2    goto: -2
Reduce: EXPRESSION -> EXPRESSION --
==>> state: 41
VARIABLE -> TYPE IDENTIFIER .   index: 2 2    goto: -2
Reduce: VARIABLE -> TYPE IDENTIFIER
==>> state: 42
IFSTMT -> IF ( . EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 2 8    goto: 75
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 75
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 75
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 43
STATEMENT -> REPEAT { . STATEMENTLIST } UNTIL ( EXPRESSION )  index: 2 8    goto: 76
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 76
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 44
STATEMENT -> FOR ( . EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 2 7    goto: 78
STATEMENT -> FOR ( . EXPRESSIONLISTVAR ) STATEMENT  index: 2 5    goto: 78
EXPRESSIONLISTVAR ->  . EXPRESSION  index: 0 1    goto: 77
EXPRESSIONLISTVAR ->  . EXPRESSIONLISTVAR ; EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 77
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 77
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 45
STATEMENT -> BREAK ; .   index: 2 2    goto: -2
Reduce: STATEMENT -> BREAK ;
==>> state: 46
EXPRESSION -> VARIABLE .   index: 1 1    goto: -2
EXPRESSION -> VARIABLE . ( EXPRESSIONLIST )  index: 1 4    goto: 24
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 25
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 25
Reduce: EXPRESSION -> VARIABLE
==>> state: 47
STATEMENT -> RETURN EXPRESSION .   index: 2 2    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: STATEMENT -> RETURN EXPRESSION
==>> state: 48
STATEMENTLIST -> STATEMENTLIST STATEMENT .   index: 2 2    goto: -2
Reduce: STATEMENTLIST -> STATEMENTLIST STATEMENT
==>> state: 49
EXPRESSIONLIST -> EXPRESSIONLIST , . EXPRESSION  index: 2 3    goto: 79
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 79
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 79
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 50
STATEMENT -> DO { . LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 2 10    goto: 80
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 51
EXPRESSION -> ( EXPRESSION . )  index: 2 3    goto: 81
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
==>> state: 52
ASSIGN -> FUN .   index: 1 1    goto: -2
Reduce: ASSIGN -> FUN
==>> state: 53
FUN -> FUNCTION . ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 1 7    goto: 82
FUN -> FUNCTION . ( EXPRESSIONLIST )  index: 1 4    goto: 82
==>> state: 54
ASSIGN -> EXPRESSION .   index: 1 1    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: ASSIGN -> EXPRESSION
==>> state: 55
ASSIGN -> INT .   index: 1 1    goto: -2
EXPRESSION -> INT .   index: 1 1    goto: -2
Reduce: ASSIGN -> INT
Reduce: EXPRESSION -> INT
==>> state: 56
ASSIGN -> IDENTIFIER . ( EXPRESSIONLIST )  index: 1 4    goto: 83
EXPRESSION -> IDENTIFIER .   index: 1 1    goto: -2
Reduce: EXPRESSION -> IDENTIFIER
==>> state: 57
STATEMENT -> VARIABLE = ASSIGN .   index: 3 3    goto: -2
Reduce: STATEMENT -> VARIABLE = ASSIGN
==>> state: 58
EXPRESSION -> VARIABLE ( EXPRESSIONLIST . )  index: 3 4    goto: 84
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 49
==>> state: 59
INDEX -> VARIABLE .   index: 1 1    goto: -2
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 25
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 25
Reduce: INDEX -> VARIABLE
==>> state: 60
INDEX -> INT .   index: 1 1    goto: -2
Reduce: INDEX -> INT
==>> state: 61
VARIABLE -> VARIABLE [ INDEX . ]  index: 3 4    goto: 85
VARIABLE -> VARIABLE [ INDEX . ] [ INDEX ]  index: 3 7    goto: 85
==>> state: 62
EXPRESSION -> EXPRESSION = EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION = EXPRESSION
==>> state: 63
EXPRESSION -> EXPRESSION + EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION + EXPRESSION
==>> state: 64
EXPRESSION -> EXPRESSION - EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION - EXPRESSION
==>> state: 65
EXPRESSION -> EXPRESSION * EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION * EXPRESSION
==>> state: 66
EXPRESSION -> EXPRESSION / EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION / EXPRESSION
==>> state: 67
EXPRESSION -> EXPRESSION < EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION < EXPRESSION
==>> state: 68
EXPRESSION -> EXPRESSION > EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION > EXPRESSION
==>> state: 69
EXPRESSION -> EXPRESSION <= EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION <= EXPRESSION
==>> state: 70
EXPRESSION -> EXPRESSION >= EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION >= EXPRESSION
==>> state: 71
EXPRESSION -> EXPRESSION == EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION == EXPRESSION
==>> state: 72
EXPRESSION -> EXPRESSION != EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION != EXPRESSION
==>> state: 73
EXPRESSION -> EXPRESSION && EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION && EXPRESSION
==>> state: 74
EXPRESSION -> EXPRESSION || EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSION -> EXPRESSION || EXPRESSION
==>> state: 75
IFSTMT -> IF ( EXPRESSION . ) LABEL IFBLOCK LABEL ELIFSTMT  index: 3 8    goto: 86
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
==>> state: 76
STATEMENT -> REPEAT { STATEMENTLIST . } UNTIL ( EXPRESSION )  index: 3 8    goto: 87
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: TYPE -> EPSILON
==>> state: 77
EXPRESSIONLISTVAR -> EXPRESSION .   index: 1 1    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSIONLISTVAR -> EXPRESSION
==>> state: 78
STATEMENT -> FOR ( EXPRESSIONLISTVAR . ) { STATEMENTLIST }  index: 3 7    goto: 88
STATEMENT -> FOR ( EXPRESSIONLISTVAR . ) STATEMENT  index: 3 5    goto: 88
EXPRESSIONLISTVAR -> EXPRESSIONLISTVAR . ; EXPRESSION  index: 1 3    goto: 89
==>> state: 79
EXPRESSIONLIST -> EXPRESSIONLIST , EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSIONLIST -> EXPRESSIONLIST , EXPRESSION
==>> state: 80
STATEMENT -> DO { LABEL . STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 3 10    goto: 90
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 90
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 81
EXPRESSION -> ( EXPRESSION ) .   index: 3 3    goto: -2
Reduce: EXPRESSION -> ( EXPRESSION )
==>> state: 82
FUN -> FUNCTION ( . EXPRESSIONLIST ) { STATEMENTLIST }  index: 2 7    goto: 91
FUN -> FUNCTION ( . EXPRESSIONLIST )  index: 2 4    goto: 91
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 91
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 83
ASSIGN -> IDENTIFIER ( . EXPRESSIONLIST )  index: 2 4    goto: 92
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 92
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 84
EXPRESSION -> VARIABLE ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: EXPRESSION -> VARIABLE ( EXPRESSIONLIST )
==>> state: 85
VARIABLE -> VARIABLE [ INDEX ] .   index: 4 4    goto: -2
VARIABLE -> VARIABLE [ INDEX ] . [ INDEX ]  index: 4 7    goto: 93
Reduce: VARIABLE -> VARIABLE [ INDEX ]
==>> state: 86
IFSTMT -> IF ( EXPRESSION ) . LABEL IFBLOCK LABEL ELIFSTMT  index: 4 8    goto: 94
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 87
STATEMENT -> REPEAT { STATEMENTLIST } . UNTIL ( EXPRESSION )  index: 4 8    goto: 95
==>> state: 88
STATEMENT -> FOR ( EXPRESSIONLISTVAR ) . { STATEMENTLIST }  index: 4 7    goto: 97
STATEMENT -> FOR ( EXPRESSIONLISTVAR ) . STATEMENT  index: 4 5    goto: 96
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: TYPE -> EPSILON
==>> state: 89
EXPRESSIONLISTVAR -> EXPRESSIONLISTVAR ; . EXPRESSION  index: 2 3    goto: 98
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 98
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 98
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 98
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 90
STATEMENT -> DO { LABEL STATEMENTLIST . } WHILE ( LABEL EXPRESSION )  index: 4 10    goto: 99
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: TYPE -> EPSILON
==>> state: 91
FUN -> FUNCTION ( EXPRESSIONLIST . ) { STATEMENTLIST }  index: 3 7    goto: 100
FUN -> FUNCTION ( EXPRESSIONLIST . )  index: 3 4    goto: 100
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 49
==>> state: 92
ASSIGN -> IDENTIFIER ( EXPRESSIONLIST . )  index: 3 4    goto: 101
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 49
==>> state: 93
VARIABLE -> VARIABLE [ INDEX ] [ . INDEX ]  index: 5 7    goto: 102
INDEX ->  . INT  index: 0 1    goto: 60
INDEX ->  . VARIABLE  index: 0 1    goto: 59
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 59
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 59
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 94
IFSTMT -> IF ( EXPRESSION ) LABEL . IFBLOCK LABEL ELIFSTMT  index: 5 8    goto: 103
IFBLOCK ->  . STATEMENTLIST  index: 0 1    goto: 104
IFBLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 105
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 104
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 95
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL . ( EXPRESSION )  index: 5 8    goto: 106
==>> state: 96
STATEMENT -> FOR ( EXPRESSIONLISTVAR ) STATEMENT .   index: 5 5    goto: -2
Reduce: STATEMENT -> FOR ( EXPRESSIONLISTVAR ) STATEMENT
==>> state: 97
STATEMENT -> FOR ( EXPRESSIONLISTVAR ) { . STATEMENTLIST }  index: 5 7    goto: 107
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 107
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 98
EXPRESSIONLISTVAR -> EXPRESSIONLISTVAR ; EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
Reduce: EXPRESSIONLISTVAR -> EXPRESSIONLISTVAR ; EXPRESSION
==>> state: 99
STATEMENT -> DO { LABEL STATEMENTLIST } . WHILE ( LABEL EXPRESSION )  index: 5 10    goto: 108
==>> state: 100
FUN -> FUNCTION ( EXPRESSIONLIST ) . { STATEMENTLIST }  index: 4 7    goto: 109
FUN -> FUNCTION ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: FUN -> FUNCTION ( EXPRESSIONLIST )
==>> state: 101
ASSIGN -> IDENTIFIER ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: ASSIGN -> IDENTIFIER ( EXPRESSIONLIST )
==>> state: 102
VARIABLE -> VARIABLE [ INDEX ] [ INDEX . ]  index: 6 7    goto: 110
==>> state: 103
IFSTMT -> IF ( EXPRESSION ) LABEL IFBLOCK . LABEL ELIFSTMT  index: 6 8    goto: 111
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 104
IFBLOCK -> STATEMENTLIST .   index: 1 1    goto: -2
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: IFBLOCK -> STATEMENTLIST
Reduce: TYPE -> EPSILON
==>> state: 105
IFBLOCK -> { . STATEMENTLIST }  index: 1 3    goto: 112
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 112
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 106
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( . EXPRESSION )  index: 6 8    goto: 113
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 113
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 113
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 113
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 107
STATEMENT -> FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST . }  index: 6 7    goto: 114
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: TYPE -> EPSILON
==>> state: 108
STATEMENT -> DO { LABEL STATEMENTLIST } WHILE . ( LABEL EXPRESSION )  index: 6 10    goto: 115
==>> state: 109
FUN -> FUNCTION ( EXPRESSIONLIST ) { . STATEMENTLIST }  index: 5 7    goto: 116
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 116
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 110
VARIABLE -> VARIABLE [ INDEX ] [ INDEX ] .   index: 7 7    goto: -2
Reduce: VARIABLE -> VARIABLE [ INDEX ] [ INDEX ]
==>> state: 111
IFSTMT -> IF ( EXPRESSION ) LABEL IFBLOCK LABEL . ELIFSTMT  index: 7 8    goto: 117
ELIFSTMT ->  . ELSEIF ( EXPRESSION ) IFBLOCK ELIFSTMT  index: 0 6    goto: 119
ELIFSTMT ->  . ELSE IFBLOCK  index: 0 2    goto: 118
ELIFSTMT -> EPSILON .   index: 1 1    goto: -2
Reduce: ELIFSTMT -> EPSILON
==>> state: 112
IFBLOCK -> { STATEMENTLIST . }  index: 2 3    goto: 120
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: TYPE -> EPSILON
==>> state: 113
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION . )  index: 7 8    goto: 121
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
==>> state: 114
STATEMENT -> FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST } .   index: 7 7    goto: -2
Reduce: STATEMENT -> FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }
==>> state: 115
STATEMENT -> DO { LABEL STATEMENTLIST } WHILE ( . LABEL EXPRESSION )  index: 7 10    goto: 122
LABEL -> EPSILON .   index: 1 1    goto: -2
Reduce: LABEL -> EPSILON
==>> state: 116
FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST . }  index: 6 7    goto: 123
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 48
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: TYPE -> EPSILON
==>> state: 117
IFSTMT -> IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT .   index: 8 8    goto: -2
Reduce: IFSTMT -> IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT
==>> state: 118
ELIFSTMT -> ELSE . IFBLOCK  index: 1 2    goto: 124
IFBLOCK ->  . STATEMENTLIST  index: 0 1    goto: 104
IFBLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 105
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 104
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 119
ELIFSTMT -> ELSEIF . ( EXPRESSION ) IFBLOCK ELIFSTMT  index: 1 6    goto: 125
==>> state: 120
IFBLOCK -> { STATEMENTLIST } .   index: 3 3    goto: -2
Reduce: IFBLOCK -> { STATEMENTLIST }
==>> state: 121
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION ) .   index: 8 8    goto: -2
Reduce: STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )
==>> state: 122
STATEMENT -> DO { LABEL STATEMENTLIST } WHILE ( LABEL . EXPRESSION )  index: 8 10    goto: 126
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 126
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 126
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 126
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 123
FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST } .   index: 7 7    goto: -2
Reduce: FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST }
==>> state: 124
ELIFSTMT -> ELSE IFBLOCK .   index: 2 2    goto: -2
Reduce: ELIFSTMT -> ELSE IFBLOCK
==>> state: 125
ELIFSTMT -> ELSEIF ( . EXPRESSION ) IFBLOCK ELIFSTMT  index: 2 6    goto: 127
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 46
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 46
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 127
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 127
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 127
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 46
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 46
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 126
STATEMENT -> DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION . )  index: 9 10    goto: 128
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
==>> state: 127
ELIFSTMT -> ELSEIF ( EXPRESSION . ) IFBLOCK ELIFSTMT  index: 3 6    goto: 129
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 26
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 27
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 28
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 29
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 30
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 31
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 32
EXPRESSION -> EXPRESSION . >= EXPRESSION  index: 1 3    goto: 34
EXPRESSION -> EXPRESSION . <= EXPRESSION  index: 1 3    goto: 33
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 35
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 36
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 37
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 38
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 39
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 40
==>> state: 128
STATEMENT -> DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION ) .   index: 10 10    goto: -2
Reduce: STATEMENT -> DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )
==>> state: 129
ELIFSTMT -> ELSEIF ( EXPRESSION ) . IFBLOCK ELIFSTMT  index: 4 6    goto: 130
IFBLOCK ->  . STATEMENTLIST  index: 0 1    goto: 104
IFBLOCK ->  . { STATEMENTLIST }  index: 0 3    goto: 105
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 104
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE  index: 0 1    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . EXPRESSIONLIST  index: 0 1    goto: 18
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 13
STATEMENT ->  . DO { LABEL STATEMENTLIST } WHILE ( LABEL EXPRESSION )  index: 0 10    goto: 19
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) { STATEMENTLIST }  index: 0 7    goto: 14
STATEMENT ->  . FOR ( EXPRESSIONLISTVAR ) STATEMENT  index: 0 5    goto: 14
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 16
STATEMENT ->  . BREAK ;  index: 0 2    goto: 15
STATEMENT ->  . ;  index: 0 1    goto: 21
STATEMENT ->  . #  index: 0 1    goto: 22
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 6
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 5
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 18
IFSTMT ->  . IF ( EXPRESSION ) LABEL IFBLOCK LABEL ELIFSTMT  index: 0 8    goto: 12
TYPE ->  . INTEGER  index: 0 1    goto: 7
TYPE ->  . DOUBLE  index: 0 1    goto: 9
TYPE -> EPSILON .   index: 1 1    goto: -2
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 2
EXPRESSION ->  . INT  index: 0 1    goto: 8
EXPRESSION ->  . FLOAT  index: 0 1    goto: 10
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 11
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 2
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION >= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION <= EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 5
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 5
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 5
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 20
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 130
ELIFSTMT -> ELSEIF ( EXPRESSION ) IFBLOCK . ELIFSTMT  index: 5 6    goto: 131
ELIFSTMT ->  . ELSEIF ( EXPRESSION ) IFBLOCK ELIFSTMT  index: 0 6    goto: 119
ELIFSTMT ->  . ELSE IFBLOCK  index: 0 2    goto: 118
ELIFSTMT -> EPSILON .   index: 1 1    goto: -2
Reduce: ELIFSTMT -> EPSILON
==>> state: 131
ELIFSTMT -> ELSEIF ( EXPRESSION ) IFBLOCK ELIFSTMT .   index: 6 6    goto: -2
Reduce: ELIFSTMT -> ELSEIF ( EXPRESSION ) IFBLOCK ELIFSTMT
