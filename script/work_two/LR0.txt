==>> state: 0
PROGRAM_ ->  . PROGRAM    goto: 1
PROGRAM ->  . VARIABLE    goto: 2
VARIABLE ->  . VARIABLE ;    goto: 2
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 1
PROGRAM_ -> PROGRAM .     goto: -1
==>> state: 2
PROGRAM -> VARIABLE .     goto: -1
VARIABLE -> VARIABLE . ;    goto: 6
==>> state: 3
VARIABLE -> TYPE . IDENTIFIER    goto: 7
VARIABLE -> TYPE . IDENTIFIER = EXPRESSION    goto: 7
VARIABLE -> TYPE . IDENTIFIER = FUNCTION    goto: 7
VARIABLE -> TYPE . IDENTIFIER , VARIABLE    goto: 7
VARIABLE -> TYPE . IDENTIFIER [ INTEGER ]    goto: 7
VARIABLE -> TYPE . IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 7
==>> state: 4
TYPE -> INTEGER .     goto: -1
==>> state: 5
TYPE -> DOUBLE .     goto: -1
==>> state: 6
VARIABLE -> VARIABLE ; .     goto: -1
==>> state: 7
VARIABLE -> TYPE IDENTIFIER .     goto: -1
VARIABLE -> TYPE IDENTIFIER . = EXPRESSION    goto: 8
VARIABLE -> TYPE IDENTIFIER . = FUNCTION    goto: 8
VARIABLE -> TYPE IDENTIFIER . , VARIABLE    goto: 10
VARIABLE -> TYPE IDENTIFIER . [ INTEGER ]    goto: 9
VARIABLE -> TYPE IDENTIFIER . [ INTEGER ] [ INTEGER ]    goto: 9
==>> state: 8
VARIABLE -> TYPE IDENTIFIER = . EXPRESSION    goto: 13
VARIABLE -> TYPE IDENTIFIER = . FUNCTION    goto: 12
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 12
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 13
EXPRESSION ->  . EXPRESSION    goto: 13
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 13
EXPRESSION ->  . EXPRESSION --    goto: 13
EXPRESSION ->  . ( EXPRESSION )    goto: 15
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 9
VARIABLE -> TYPE IDENTIFIER [ . INTEGER ]    goto: 16
VARIABLE -> TYPE IDENTIFIER [ . INTEGER ] [ INTEGER ]    goto: 16
==>> state: 10
VARIABLE -> TYPE IDENTIFIER , . VARIABLE    goto: 17
VARIABLE ->  . VARIABLE ;    goto: 17
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 11
EXPRESSION -> VARIABLE .     goto: -1
VARIABLE -> VARIABLE . ;    goto: 6
==>> state: 12
VARIABLE -> TYPE IDENTIFIER = FUNCTION .     goto: -1
EXPRESSION -> FUNCTION .     goto: -1
==>> state: 13
VARIABLE -> TYPE IDENTIFIER = EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 14
FUNCTION -> TYPE . IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 29
FUNCTION -> TYPE . IDENTIFIER ( EXPRESSIONLIST )    goto: 29
VARIABLE -> TYPE . IDENTIFIER    goto: 29
VARIABLE -> TYPE . IDENTIFIER = EXPRESSION    goto: 29
VARIABLE -> TYPE . IDENTIFIER = FUNCTION    goto: 29
VARIABLE -> TYPE . IDENTIFIER , VARIABLE    goto: 29
VARIABLE -> TYPE . IDENTIFIER [ INTEGER ]    goto: 29
VARIABLE -> TYPE . IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 29
==>> state: 15
EXPRESSION -> ( . EXPRESSION )    goto: 31
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 31
EXPRESSION ->  . EXPRESSION    goto: 31
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 31
EXPRESSION ->  . EXPRESSION --    goto: 31
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 16
VARIABLE -> TYPE IDENTIFIER [ INTEGER . ]    goto: 32
VARIABLE -> TYPE IDENTIFIER [ INTEGER . ] [ INTEGER ]    goto: 32
==>> state: 17
VARIABLE -> TYPE IDENTIFIER , VARIABLE .     goto: -1
VARIABLE -> VARIABLE . ;    goto: 6
==>> state: 18
EXPRESSION -> EXPRESSION + . EXPRESSION    goto: 33
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 33
EXPRESSION ->  . EXPRESSION    goto: 33
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 33
EXPRESSION ->  . EXPRESSION --    goto: 33
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 19
EXPRESSION -> EXPRESSION - . EXPRESSION    goto: 34
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 34
EXPRESSION ->  . EXPRESSION    goto: 34
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 34
EXPRESSION ->  . EXPRESSION --    goto: 34
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 20
EXPRESSION -> EXPRESSION * . EXPRESSION    goto: 35
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 35
EXPRESSION ->  . EXPRESSION    goto: 35
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 35
EXPRESSION ->  . EXPRESSION --    goto: 35
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 21
EXPRESSION -> EXPRESSION / . EXPRESSION    goto: 36
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 36
EXPRESSION ->  . EXPRESSION    goto: 36
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 36
EXPRESSION ->  . EXPRESSION --    goto: 36
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 22
EXPRESSION -> EXPRESSION < . EXPRESSION    goto: 37
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 37
EXPRESSION ->  . EXPRESSION    goto: 37
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 37
EXPRESSION ->  . EXPRESSION --    goto: 37
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 23
EXPRESSION -> EXPRESSION > . EXPRESSION    goto: 38
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 38
EXPRESSION ->  . EXPRESSION    goto: 38
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 38
EXPRESSION ->  . EXPRESSION --    goto: 38
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 24
EXPRESSION -> EXPRESSION == . EXPRESSION    goto: 39
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 39
EXPRESSION ->  . EXPRESSION    goto: 39
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 39
EXPRESSION ->  . EXPRESSION --    goto: 39
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 25
EXPRESSION -> EXPRESSION != . EXPRESSION    goto: 40
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 40
EXPRESSION ->  . EXPRESSION    goto: 40
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 40
EXPRESSION ->  . EXPRESSION --    goto: 40
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 26
EXPRESSION -> EXPRESSION && . EXPRESSION    goto: 41
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 41
EXPRESSION ->  . EXPRESSION    goto: 41
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 41
EXPRESSION ->  . EXPRESSION --    goto: 41
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 27
EXPRESSION -> EXPRESSION ++ .     goto: -1
==>> state: 28
EXPRESSION -> EXPRESSION -- .     goto: -1
==>> state: 29
FUNCTION -> TYPE IDENTIFIER . ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 42
FUNCTION -> TYPE IDENTIFIER . ( EXPRESSIONLIST )    goto: 42
VARIABLE -> TYPE IDENTIFIER .     goto: -1
VARIABLE -> TYPE IDENTIFIER . = EXPRESSION    goto: 8
VARIABLE -> TYPE IDENTIFIER . = FUNCTION    goto: 8
VARIABLE -> TYPE IDENTIFIER . , VARIABLE    goto: 10
VARIABLE -> TYPE IDENTIFIER . [ INTEGER ]    goto: 9
VARIABLE -> TYPE IDENTIFIER . [ INTEGER ] [ INTEGER ]    goto: 9
==>> state: 30
EXPRESSION -> FUNCTION .     goto: -1
==>> state: 31
EXPRESSION -> ( EXPRESSION . )    goto: 43
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 32
VARIABLE -> TYPE IDENTIFIER [ INTEGER ] .     goto: -1
VARIABLE -> TYPE IDENTIFIER [ INTEGER ] . [ INTEGER ]    goto: 44
==>> state: 33
EXPRESSION -> EXPRESSION + EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 34
EXPRESSION -> EXPRESSION - EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 35
EXPRESSION -> EXPRESSION * EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 36
EXPRESSION -> EXPRESSION / EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 37
EXPRESSION -> EXPRESSION < EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 38
EXPRESSION -> EXPRESSION > EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 39
EXPRESSION -> EXPRESSION == EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 40
EXPRESSION -> EXPRESSION != EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 41
EXPRESSION -> EXPRESSION && EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 42
FUNCTION -> TYPE IDENTIFIER ( . EXPRESSIONLIST ) { STATEMENTLIST }    goto: 46
FUNCTION -> TYPE IDENTIFIER ( . EXPRESSIONLIST )    goto: 46
EXPRESSIONLIST ->  . EXPRESSION    goto: 45
EXPRESSIONLIST ->  . EXPRESSIONLIST ; EXPRESSION    goto: 46
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION    goto: 46
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION    goto: 45
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 45
EXPRESSION ->  . EXPRESSION --    goto: 45
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 43
EXPRESSION -> ( EXPRESSION ) .     goto: -1
==>> state: 44
VARIABLE -> TYPE IDENTIFIER [ INTEGER ] [ . INTEGER ]    goto: 47
==>> state: 45
EXPRESSIONLIST -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 46
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST . ) { STATEMENTLIST }    goto: 48
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST . )    goto: 48
EXPRESSIONLIST -> EXPRESSIONLIST . ; EXPRESSION    goto: 50
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION    goto: 49
==>> state: 47
VARIABLE -> TYPE IDENTIFIER [ INTEGER ] [ INTEGER . ]    goto: 51
==>> state: 48
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST ) . { STATEMENTLIST }    goto: 52
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST ) .     goto: -1
==>> state: 49
EXPRESSIONLIST -> EXPRESSIONLIST , . EXPRESSION    goto: 53
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 53
EXPRESSION ->  . EXPRESSION    goto: 53
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 53
EXPRESSION ->  . EXPRESSION --    goto: 53
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 50
EXPRESSIONLIST -> EXPRESSIONLIST ; . EXPRESSION    goto: 54
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 54
EXPRESSION ->  . EXPRESSION    goto: 54
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 54
EXPRESSION ->  . EXPRESSION --    goto: 54
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 51
VARIABLE -> TYPE IDENTIFIER [ INTEGER ] [ INTEGER ] .     goto: -1
==>> state: 52
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST ) { . STATEMENTLIST }    goto: 62
STATEMENTLIST ->  . STATEMENT    goto: 56
STATEMENTLIST ->  . STATEMENTLIST STATEMENT    goto: 62
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 53
EXPRESSIONLIST -> EXPRESSIONLIST , EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 54
EXPRESSIONLIST -> EXPRESSIONLIST ; EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 55
STATEMENT -> VARIABLE .     goto: -1
VARIABLE -> VARIABLE . ;    goto: 6
==>> state: 56
STATEMENTLIST -> STATEMENT .     goto: -1
==>> state: 57
STATEMENT -> IF . ( EXPRESSION ) STATEMENT    goto: 64
STATEMENT -> IF . ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 64
STATEMENT -> IF . ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 64
==>> state: 58
STATEMENT -> REPEAT . { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 65
==>> state: 59
STATEMENT -> FOR . ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 66
STATEMENT -> FOR . ( EXPRESSIONLIST ) STATEMENT    goto: 66
==>> state: 60
STATEMENT -> BREAK . ;    goto: 67
==>> state: 61
STATEMENT -> RETURN . EXPRESSION ;    goto: 68
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 68
EXPRESSION ->  . EXPRESSION    goto: 68
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 68
EXPRESSION ->  . EXPRESSION --    goto: 68
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 62
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST . }    goto: 70
STATEMENTLIST -> STATEMENTLIST . STATEMENT    goto: 69
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 63
STATEMENT -> ; .     goto: -1
==>> state: 64
STATEMENT -> IF ( . EXPRESSION ) STATEMENT    goto: 71
STATEMENT -> IF ( . EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 71
STATEMENT -> IF ( . EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 71
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 71
EXPRESSION ->  . EXPRESSION    goto: 71
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 71
EXPRESSION ->  . EXPRESSION --    goto: 71
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 65
STATEMENT -> REPEAT { . STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 72
STATEMENTLIST ->  . STATEMENT    goto: 56
STATEMENTLIST ->  . STATEMENTLIST STATEMENT    goto: 72
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 66
STATEMENT -> FOR ( . EXPRESSIONLIST ) { STATEMENTLIST }    goto: 73
STATEMENT -> FOR ( . EXPRESSIONLIST ) STATEMENT    goto: 73
EXPRESSIONLIST ->  . EXPRESSION    goto: 45
EXPRESSIONLIST ->  . EXPRESSIONLIST ; EXPRESSION    goto: 73
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION    goto: 73
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 45
EXPRESSION ->  . EXPRESSION    goto: 45
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 45
EXPRESSION ->  . EXPRESSION --    goto: 45
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 67
STATEMENT -> BREAK ; .     goto: -1
==>> state: 68
STATEMENT -> RETURN EXPRESSION . ;    goto: 74
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 69
STATEMENTLIST -> STATEMENTLIST STATEMENT .     goto: -1
==>> state: 70
FUNCTION -> TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST } .     goto: -1
==>> state: 71
STATEMENT -> IF ( EXPRESSION . ) STATEMENT    goto: 75
STATEMENT -> IF ( EXPRESSION . ) STATEMENT ELSE STATEMENT    goto: 75
STATEMENT -> IF ( EXPRESSION . ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 75
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 72
STATEMENT -> REPEAT { STATEMENTLIST . } UNTIL ( EXPRESSION )    goto: 76
STATEMENTLIST -> STATEMENTLIST . STATEMENT    goto: 69
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 73
STATEMENT -> FOR ( EXPRESSIONLIST . ) { STATEMENTLIST }    goto: 77
STATEMENT -> FOR ( EXPRESSIONLIST . ) STATEMENT    goto: 77
EXPRESSIONLIST -> EXPRESSIONLIST . ; EXPRESSION    goto: 50
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION    goto: 49
==>> state: 74
STATEMENT -> RETURN EXPRESSION ; .     goto: -1
==>> state: 75
STATEMENT -> IF ( EXPRESSION ) . STATEMENT    goto: 78
STATEMENT -> IF ( EXPRESSION ) . STATEMENT ELSE STATEMENT    goto: 78
STATEMENT -> IF ( EXPRESSION ) . STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 78
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 76
STATEMENT -> REPEAT { STATEMENTLIST } . UNTIL ( EXPRESSION )    goto: 79
==>> state: 77
STATEMENT -> FOR ( EXPRESSIONLIST ) . { STATEMENTLIST }    goto: 81
STATEMENT -> FOR ( EXPRESSIONLIST ) . STATEMENT    goto: 80
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 78
STATEMENT -> IF ( EXPRESSION ) STATEMENT .     goto: -1
STATEMENT -> IF ( EXPRESSION ) STATEMENT . ELSE STATEMENT    goto: 82
STATEMENT -> IF ( EXPRESSION ) STATEMENT . ELSE IF ( EXPRESSION ) STATEMENT    goto: 82
==>> state: 79
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL . ( EXPRESSION )    goto: 83
==>> state: 80
STATEMENT -> FOR ( EXPRESSIONLIST ) STATEMENT .     goto: -1
==>> state: 81
STATEMENT -> FOR ( EXPRESSIONLIST ) { . STATEMENTLIST }    goto: 84
STATEMENTLIST ->  . STATEMENT    goto: 56
STATEMENTLIST ->  . STATEMENTLIST STATEMENT    goto: 84
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 82
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE . STATEMENT    goto: 85
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE . IF ( EXPRESSION ) STATEMENT    goto: 86
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 86
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 86
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 86
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 83
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( . EXPRESSION )    goto: 87
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 87
EXPRESSION ->  . EXPRESSION    goto: 87
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 87
EXPRESSION ->  . EXPRESSION --    goto: 87
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 84
STATEMENT -> FOR ( EXPRESSIONLIST ) { STATEMENTLIST . }    goto: 88
STATEMENTLIST -> STATEMENTLIST . STATEMENT    goto: 69
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 85
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE STATEMENT .     goto: -1
==>> state: 86
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE IF . ( EXPRESSION ) STATEMENT    goto: 89
STATEMENT -> IF . ( EXPRESSION ) STATEMENT    goto: 89
STATEMENT -> IF . ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 89
STATEMENT -> IF . ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 89
==>> state: 87
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION . )    goto: 90
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 88
STATEMENT -> FOR ( EXPRESSIONLIST ) { STATEMENTLIST } .     goto: -1
==>> state: 89
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE IF ( . EXPRESSION ) STATEMENT    goto: 91
STATEMENT -> IF ( . EXPRESSION ) STATEMENT    goto: 91
STATEMENT -> IF ( . EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 91
STATEMENT -> IF ( . EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 91
EXPRESSION ->  . VARIABLE    goto: 11
EXPRESSION ->  . FUNCTION    goto: 30
EXPRESSION ->  . EXPRESSION + EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION - EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION * EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION / EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION < EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION > EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION == EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION != EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION && EXPRESSION    goto: 91
EXPRESSION ->  . EXPRESSION    goto: 91
EXPRESSION ->  .     goto: -1
EXPRESSION ->  . EXPRESSION ++    goto: 91
EXPRESSION ->  . EXPRESSION --    goto: 91
EXPRESSION ->  . ( EXPRESSION )    goto: 15
VARIABLE ->  . VARIABLE ;    goto: 11
VARIABLE ->  . TYPE IDENTIFIER    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 14
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 14
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 14
FUNCTION ->  . TYPE IDENTIFIER ( EXPRESSIONLIST )    goto: 14
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 90
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION ) .     goto: -1
==>> state: 91
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION . ) STATEMENT    goto: 92
STATEMENT -> IF ( EXPRESSION . ) STATEMENT    goto: 92
STATEMENT -> IF ( EXPRESSION . ) STATEMENT ELSE STATEMENT    goto: 92
STATEMENT -> IF ( EXPRESSION . ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 92
EXPRESSION -> EXPRESSION . + EXPRESSION    goto: 18
EXPRESSION -> EXPRESSION . - EXPRESSION    goto: 19
EXPRESSION -> EXPRESSION . * EXPRESSION    goto: 20
EXPRESSION -> EXPRESSION . / EXPRESSION    goto: 21
EXPRESSION -> EXPRESSION . < EXPRESSION    goto: 22
EXPRESSION -> EXPRESSION . > EXPRESSION    goto: 23
EXPRESSION -> EXPRESSION . == EXPRESSION    goto: 24
EXPRESSION -> EXPRESSION . != EXPRESSION    goto: 25
EXPRESSION -> EXPRESSION . && EXPRESSION    goto: 26
EXPRESSION -> EXPRESSION .     goto: -1
EXPRESSION -> EXPRESSION . ++    goto: 27
EXPRESSION -> EXPRESSION . --    goto: 28
==>> state: 92
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) . STATEMENT    goto: 93
STATEMENT -> IF ( EXPRESSION ) . STATEMENT    goto: 93
STATEMENT -> IF ( EXPRESSION ) . STATEMENT ELSE STATEMENT    goto: 93
STATEMENT -> IF ( EXPRESSION ) . STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 93
STATEMENT ->  . VARIABLE    goto: 55
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE STATEMENT    goto: 57
STATEMENT ->  . IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT    goto: 57
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )    goto: 58
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }    goto: 59
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT    goto: 59
STATEMENT ->  . RETURN EXPRESSION ;    goto: 61
STATEMENT ->  . BREAK ;    goto: 60
STATEMENT ->  . EPSILON    goto: -1
STATEMENT ->  . ;    goto: 63
VARIABLE ->  . VARIABLE ;    goto: 55
VARIABLE ->  . TYPE IDENTIFIER    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = EXPRESSION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER = FUNCTION    goto: 3
VARIABLE ->  . TYPE IDENTIFIER , VARIABLE    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ]    goto: 3
VARIABLE ->  . TYPE IDENTIFIER [ INTEGER ] [ INTEGER ]    goto: 3
TYPE ->  . INTEGER    goto: 4
TYPE ->  . DOUBLE    goto: 5
TYPE ->  . EPSILON    goto: -1
==>> state: 93
STATEMENT -> IF ( EXPRESSION ) STATEMENT ELSE IF ( EXPRESSION ) STATEMENT .     goto: -1
STATEMENT -> IF ( EXPRESSION ) STATEMENT .     goto: -1
STATEMENT -> IF ( EXPRESSION ) STATEMENT . ELSE STATEMENT    goto: 82
STATEMENT -> IF ( EXPRESSION ) STATEMENT . ELSE IF ( EXPRESSION ) STATEMENT    goto: 82
