==>> state: 0
PROGRAM_ ->  . PROGRAM  index: 0 1    goto: 1
PROGRAM ->  . STATEMENTLIST  index: 0 1    goto: 13
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 13
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 1
PROGRAM_ -> PROGRAM .   index: 1 1    goto: -2
Reduce: PROGRAM_ -> PROGRAM
==>> state: 2
STATEMENT -> VARIABLE . ;  index: 1 2    goto: 19
STATEMENT -> VARIABLE . = ASSIGN  index: 1 3    goto: 16
VARIABLE -> VARIABLE . , VARIABLE  index: 1 3    goto: 18
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 17
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 17
==>> state: 3
STATEMENTLIST -> STATEMENT .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> STATEMENT
==>> state: 4
STATEMENT -> IFSTMT .   index: 1 1    goto: -2
Reduce: STATEMENT -> IFSTMT
==>> state: 5
VARIABLE -> TYPE . IDENTIFIER  index: 1 2    goto: 20
==>> state: 6
TYPE -> INTEGER .   index: 1 1    goto: -2
Reduce: TYPE -> INTEGER
==>> state: 7
TYPE -> DOUBLE .   index: 1 1    goto: -2
Reduce: TYPE -> DOUBLE
==>> state: 8
IFSTMT -> IF . ( EXPRESSION ) STATEMENTLIST  index: 1 5    goto: 21
IFSTMT -> IF . ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 1 10    goto: 21
IFSTMT -> IF . ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 1 7    goto: 21
==>> state: 9
STATEMENT -> REPEAT . { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 1 8    goto: 22
==>> state: 10
STATEMENT -> FOR . ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 1 7    goto: 23
STATEMENT -> FOR . ( EXPRESSIONLIST ) STATEMENT  index: 1 5    goto: 23
==>> state: 11
STATEMENT -> BREAK . ;  index: 1 2    goto: 24
==>> state: 12
STATEMENT -> RETURN . EXPRESSION  index: 1 2    goto: 26
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 26
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 26
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 26
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 13
PROGRAM -> STATEMENTLIST .   index: 1 1    goto: -2
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: PROGRAM -> STATEMENTLIST
Reduce: TYPE -> EPSILON
==>> state: 14
STATEMENT -> ; .   index: 1 1    goto: -2
Reduce: STATEMENT -> ;
==>> state: 15
STATEMENT -> # .   index: 1 1    goto: -2
Reduce: STATEMENT -> #
==>> state: 16
STATEMENT -> VARIABLE = . ASSIGN  index: 2 3    goto: 37
ASSIGN ->  . INT  index: 0 1    goto: 35
ASSIGN ->  . EXPRESSION  index: 0 1    goto: 34
ASSIGN ->  . IDENTIFIER ( EXPRESSIONLIST )  index: 0 4    goto: 36
ASSIGN ->  . FUN  index: 0 1    goto: 32
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 35
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 36
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 34
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 34
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 34
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
FUN ->  . FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 33
FUN ->  . FUNCTION ( EXPRESSIONLIST )  index: 0 4    goto: 33
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 17
VARIABLE -> VARIABLE [ . INDEX ]  index: 2 4    goto: 40
VARIABLE -> VARIABLE [ . INDEX ] [ INDEX ]  index: 2 7    goto: 40
INDEX ->  . INT  index: 0 1    goto: 38
INDEX ->  . IDENTIFIER  index: 0 1    goto: 39
==>> state: 18
VARIABLE -> VARIABLE , . VARIABLE  index: 2 3    goto: 41
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 41
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 41
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 41
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 19
STATEMENT -> VARIABLE ; .   index: 2 2    goto: -2
Reduce: STATEMENT -> VARIABLE ;
==>> state: 20
VARIABLE -> TYPE IDENTIFIER .   index: 2 2    goto: -2
Reduce: VARIABLE -> TYPE IDENTIFIER
==>> state: 21
IFSTMT -> IF ( . EXPRESSION ) STATEMENTLIST  index: 2 5    goto: 42
IFSTMT -> IF ( . EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 2 10    goto: 42
IFSTMT -> IF ( . EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 2 7    goto: 42
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 42
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 42
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 42
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 22
STATEMENT -> REPEAT { . STATEMENTLIST } UNTIL ( EXPRESSION )  index: 2 8    goto: 43
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 43
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 23
STATEMENT -> FOR ( . EXPRESSIONLIST ) { STATEMENTLIST }  index: 2 7    goto: 45
STATEMENT -> FOR ( . EXPRESSIONLIST ) STATEMENT  index: 2 5    goto: 45
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 44
EXPRESSIONLIST ->  . EXPRESSIONLIST ; EXPRESSION  index: 0 3    goto: 45
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 45
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 44
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 44
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 24
STATEMENT -> BREAK ; .   index: 2 2    goto: -2
Reduce: STATEMENT -> BREAK ;
==>> state: 25
EXPRESSION -> VARIABLE .   index: 1 1    goto: -2
EXPRESSION -> VARIABLE . ( EXPRESSIONLIST )  index: 1 4    goto: 46
VARIABLE -> VARIABLE . , VARIABLE  index: 1 3    goto: 18
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 17
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 17
Reduce: EXPRESSION -> VARIABLE
==>> state: 26
STATEMENT -> RETURN EXPRESSION .   index: 2 2    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: STATEMENT -> RETURN EXPRESSION
==>> state: 27
EXPRESSION -> INT .   index: 1 1    goto: -2
Reduce: EXPRESSION -> INT
==>> state: 28
EXPRESSION -> FLOAT .   index: 1 1    goto: -2
Reduce: EXPRESSION -> FLOAT
==>> state: 29
EXPRESSION -> IDENTIFIER .   index: 1 1    goto: -2
Reduce: EXPRESSION -> IDENTIFIER
==>> state: 30
EXPRESSION -> ( . EXPRESSION )  index: 1 3    goto: 60
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 60
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 60
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 60
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 31
STATEMENTLIST -> STATEMENTLIST STATEMENT .   index: 2 2    goto: -2
Reduce: STATEMENTLIST -> STATEMENTLIST STATEMENT
==>> state: 32
ASSIGN -> FUN .   index: 1 1    goto: -2
Reduce: ASSIGN -> FUN
==>> state: 33
FUN -> FUNCTION . ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 1 7    goto: 61
FUN -> FUNCTION . ( EXPRESSIONLIST )  index: 1 4    goto: 61
==>> state: 34
ASSIGN -> EXPRESSION .   index: 1 1    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: ASSIGN -> EXPRESSION
==>> state: 35
ASSIGN -> INT .   index: 1 1    goto: -2
EXPRESSION -> INT .   index: 1 1    goto: -2
Reduce: ASSIGN -> INT
Reduce: EXPRESSION -> INT
==>> state: 36
ASSIGN -> IDENTIFIER . ( EXPRESSIONLIST )  index: 1 4    goto: 62
EXPRESSION -> IDENTIFIER .   index: 1 1    goto: -2
Reduce: EXPRESSION -> IDENTIFIER
==>> state: 37
STATEMENT -> VARIABLE = ASSIGN .   index: 3 3    goto: -2
Reduce: STATEMENT -> VARIABLE = ASSIGN
==>> state: 38
INDEX -> INT .   index: 1 1    goto: -2
Reduce: INDEX -> INT
==>> state: 39
INDEX -> IDENTIFIER .   index: 1 1    goto: -2
Reduce: INDEX -> IDENTIFIER
==>> state: 40
VARIABLE -> VARIABLE [ INDEX . ]  index: 3 4    goto: 63
VARIABLE -> VARIABLE [ INDEX . ] [ INDEX ]  index: 3 7    goto: 63
==>> state: 41
VARIABLE -> VARIABLE , VARIABLE .   index: 3 3    goto: -2
VARIABLE -> VARIABLE . , VARIABLE  index: 1 3    goto: 18
VARIABLE -> VARIABLE . [ INDEX ]  index: 1 4    goto: 17
VARIABLE -> VARIABLE . [ INDEX ] [ INDEX ]  index: 1 7    goto: 17
Reduce: VARIABLE -> VARIABLE , VARIABLE
==>> state: 42
IFSTMT -> IF ( EXPRESSION . ) STATEMENTLIST  index: 3 5    goto: 64
IFSTMT -> IF ( EXPRESSION . ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 3 10    goto: 64
IFSTMT -> IF ( EXPRESSION . ) STATEMENTLIST ELSE STATEMENTLIST  index: 3 7    goto: 64
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
==>> state: 43
STATEMENT -> REPEAT { STATEMENTLIST . } UNTIL ( EXPRESSION )  index: 3 8    goto: 65
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 44
EXPRESSIONLIST -> EXPRESSION .   index: 1 1    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSIONLIST -> EXPRESSION
==>> state: 45
STATEMENT -> FOR ( EXPRESSIONLIST . ) { STATEMENTLIST }  index: 3 7    goto: 66
STATEMENT -> FOR ( EXPRESSIONLIST . ) STATEMENT  index: 3 5    goto: 66
EXPRESSIONLIST -> EXPRESSIONLIST . ; EXPRESSION  index: 1 3    goto: 68
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 67
==>> state: 46
EXPRESSION -> VARIABLE ( . EXPRESSIONLIST )  index: 2 4    goto: 69
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 44
EXPRESSIONLIST ->  . EXPRESSIONLIST ; EXPRESSION  index: 0 3    goto: 69
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 69
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 44
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 44
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 47
EXPRESSION -> EXPRESSION = . EXPRESSION  index: 2 3    goto: 70
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 70
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 70
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 70
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 48
EXPRESSION -> EXPRESSION + . EXPRESSION  index: 2 3    goto: 71
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 71
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 71
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 71
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 49
EXPRESSION -> EXPRESSION - . EXPRESSION  index: 2 3    goto: 72
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 72
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 72
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 72
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 50
EXPRESSION -> EXPRESSION * . EXPRESSION  index: 2 3    goto: 73
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 73
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 73
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 73
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 51
EXPRESSION -> EXPRESSION / . EXPRESSION  index: 2 3    goto: 74
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 74
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 74
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 74
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 52
EXPRESSION -> EXPRESSION < . EXPRESSION  index: 2 3    goto: 75
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 75
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 75
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 75
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 53
EXPRESSION -> EXPRESSION > . EXPRESSION  index: 2 3    goto: 76
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 76
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 76
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 76
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 54
EXPRESSION -> EXPRESSION == . EXPRESSION  index: 2 3    goto: 77
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 77
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 77
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 77
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 55
EXPRESSION -> EXPRESSION != . EXPRESSION  index: 2 3    goto: 78
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 78
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 78
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 78
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 56
EXPRESSION -> EXPRESSION && . EXPRESSION  index: 2 3    goto: 79
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 79
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 79
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 79
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 57
EXPRESSION -> EXPRESSION || . EXPRESSION  index: 2 3    goto: 80
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 80
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 80
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 80
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 58
EXPRESSION -> EXPRESSION ++ .   index: 2 2    goto: -2
Reduce: EXPRESSION -> EXPRESSION ++
==>> state: 59
EXPRESSION -> EXPRESSION -- .   index: 2 2    goto: -2
Reduce: EXPRESSION -> EXPRESSION --
==>> state: 60
EXPRESSION -> ( EXPRESSION . )  index: 2 3    goto: 81
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
==>> state: 61
FUN -> FUNCTION ( . EXPRESSIONLIST ) { STATEMENTLIST }  index: 2 7    goto: 82
FUN -> FUNCTION ( . EXPRESSIONLIST )  index: 2 4    goto: 82
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 44
EXPRESSIONLIST ->  . EXPRESSIONLIST ; EXPRESSION  index: 0 3    goto: 82
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 82
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 44
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 44
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 62
ASSIGN -> IDENTIFIER ( . EXPRESSIONLIST )  index: 2 4    goto: 83
EXPRESSIONLIST ->  . EXPRESSION  index: 0 1    goto: 44
EXPRESSIONLIST ->  . EXPRESSIONLIST ; EXPRESSION  index: 0 3    goto: 83
EXPRESSIONLIST ->  . EXPRESSIONLIST , EXPRESSION  index: 0 3    goto: 83
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 44
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 44
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 44
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 63
VARIABLE -> VARIABLE [ INDEX ] .   index: 4 4    goto: -2
VARIABLE -> VARIABLE [ INDEX ] . [ INDEX ]  index: 4 7    goto: 84
Reduce: VARIABLE -> VARIABLE [ INDEX ]
==>> state: 64
IFSTMT -> IF ( EXPRESSION ) . STATEMENTLIST  index: 4 5    goto: 85
IFSTMT -> IF ( EXPRESSION ) . STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 4 10    goto: 85
IFSTMT -> IF ( EXPRESSION ) . STATEMENTLIST ELSE STATEMENTLIST  index: 4 7    goto: 85
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 85
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 65
STATEMENT -> REPEAT { STATEMENTLIST } . UNTIL ( EXPRESSION )  index: 4 8    goto: 86
==>> state: 66
STATEMENT -> FOR ( EXPRESSIONLIST ) . { STATEMENTLIST }  index: 4 7    goto: 88
STATEMENT -> FOR ( EXPRESSIONLIST ) . STATEMENT  index: 4 5    goto: 87
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 67
EXPRESSIONLIST -> EXPRESSIONLIST , . EXPRESSION  index: 2 3    goto: 89
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 89
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 89
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 89
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 68
EXPRESSIONLIST -> EXPRESSIONLIST ; . EXPRESSION  index: 2 3    goto: 90
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 90
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 90
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 90
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 69
EXPRESSION -> VARIABLE ( EXPRESSIONLIST . )  index: 3 4    goto: 91
EXPRESSIONLIST -> EXPRESSIONLIST . ; EXPRESSION  index: 1 3    goto: 68
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 67
==>> state: 70
EXPRESSION -> EXPRESSION = EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION = EXPRESSION
==>> state: 71
EXPRESSION -> EXPRESSION + EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION + EXPRESSION
==>> state: 72
EXPRESSION -> EXPRESSION - EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION - EXPRESSION
==>> state: 73
EXPRESSION -> EXPRESSION * EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION * EXPRESSION
==>> state: 74
EXPRESSION -> EXPRESSION / EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION / EXPRESSION
==>> state: 75
EXPRESSION -> EXPRESSION < EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION < EXPRESSION
==>> state: 76
EXPRESSION -> EXPRESSION > EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION > EXPRESSION
==>> state: 77
EXPRESSION -> EXPRESSION == EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION == EXPRESSION
==>> state: 78
EXPRESSION -> EXPRESSION != EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION != EXPRESSION
==>> state: 79
EXPRESSION -> EXPRESSION && EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION && EXPRESSION
==>> state: 80
EXPRESSION -> EXPRESSION || EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSION -> EXPRESSION || EXPRESSION
==>> state: 81
EXPRESSION -> ( EXPRESSION ) .   index: 3 3    goto: -2
Reduce: EXPRESSION -> ( EXPRESSION )
==>> state: 82
FUN -> FUNCTION ( EXPRESSIONLIST . ) { STATEMENTLIST }  index: 3 7    goto: 92
FUN -> FUNCTION ( EXPRESSIONLIST . )  index: 3 4    goto: 92
EXPRESSIONLIST -> EXPRESSIONLIST . ; EXPRESSION  index: 1 3    goto: 68
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 67
==>> state: 83
ASSIGN -> IDENTIFIER ( EXPRESSIONLIST . )  index: 3 4    goto: 93
EXPRESSIONLIST -> EXPRESSIONLIST . ; EXPRESSION  index: 1 3    goto: 68
EXPRESSIONLIST -> EXPRESSIONLIST . , EXPRESSION  index: 1 3    goto: 67
==>> state: 84
VARIABLE -> VARIABLE [ INDEX ] [ . INDEX ]  index: 5 7    goto: 94
INDEX ->  . INT  index: 0 1    goto: 38
INDEX ->  . IDENTIFIER  index: 0 1    goto: 39
==>> state: 85
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST .   index: 5 5    goto: -2
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST . ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 5 10    goto: 96
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST . ELSE STATEMENTLIST  index: 5 7    goto: 95
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST
Reduce: TYPE -> EPSILON
==>> state: 86
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL . ( EXPRESSION )  index: 5 8    goto: 97
==>> state: 87
STATEMENT -> FOR ( EXPRESSIONLIST ) STATEMENT .   index: 5 5    goto: -2
Reduce: STATEMENT -> FOR ( EXPRESSIONLIST ) STATEMENT
==>> state: 88
STATEMENT -> FOR ( EXPRESSIONLIST ) { . STATEMENTLIST }  index: 5 7    goto: 98
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 98
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 89
EXPRESSIONLIST -> EXPRESSIONLIST , EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSIONLIST -> EXPRESSIONLIST , EXPRESSION
==>> state: 90
EXPRESSIONLIST -> EXPRESSIONLIST ; EXPRESSION .   index: 3 3    goto: -2
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
Reduce: EXPRESSIONLIST -> EXPRESSIONLIST ; EXPRESSION
==>> state: 91
EXPRESSION -> VARIABLE ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: EXPRESSION -> VARIABLE ( EXPRESSIONLIST )
==>> state: 92
FUN -> FUNCTION ( EXPRESSIONLIST ) . { STATEMENTLIST }  index: 4 7    goto: 99
FUN -> FUNCTION ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: FUN -> FUNCTION ( EXPRESSIONLIST )
==>> state: 93
ASSIGN -> IDENTIFIER ( EXPRESSIONLIST ) .   index: 4 4    goto: -2
Reduce: ASSIGN -> IDENTIFIER ( EXPRESSIONLIST )
==>> state: 94
VARIABLE -> VARIABLE [ INDEX ] [ INDEX . ]  index: 6 7    goto: 100
==>> state: 95
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSE . STATEMENTLIST  index: 6 7    goto: 101
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 101
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 96
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSEIF . ( EXPRESSION ) STATEMENTLIST  index: 6 10    goto: 102
==>> state: 97
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( . EXPRESSION )  index: 6 8    goto: 103
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 103
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 103
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 103
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 98
STATEMENT -> FOR ( EXPRESSIONLIST ) { STATEMENTLIST . }  index: 6 7    goto: 104
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 99
FUN -> FUNCTION ( EXPRESSIONLIST ) { . STATEMENTLIST }  index: 5 7    goto: 105
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 105
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 100
VARIABLE -> VARIABLE [ INDEX ] [ INDEX ] .   index: 7 7    goto: -2
Reduce: VARIABLE -> VARIABLE [ INDEX ] [ INDEX ]
==>> state: 101
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST .   index: 7 7    goto: -2
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST
Reduce: TYPE -> EPSILON
==>> state: 102
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( . EXPRESSION ) STATEMENTLIST  index: 7 10    goto: 106
EXPRESSION ->  . VARIABLE  index: 0 1    goto: 25
EXPRESSION ->  . INT  index: 0 1    goto: 27
EXPRESSION ->  . FLOAT  index: 0 1    goto: 28
EXPRESSION ->  . IDENTIFIER  index: 0 1    goto: 29
EXPRESSION ->  . EXPRESSION = EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . VARIABLE ( EXPRESSIONLIST )  index: 0 4    goto: 25
EXPRESSION ->  . EXPRESSION + EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION - EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION * EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION / EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION < EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION > EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION == EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION != EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION && EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION || EXPRESSION  index: 0 3    goto: 106
EXPRESSION ->  . EXPRESSION ++  index: 0 2    goto: 106
EXPRESSION ->  . EXPRESSION --  index: 0 2    goto: 106
EXPRESSION ->  . ( EXPRESSION )  index: 0 3    goto: 30
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 25
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 25
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 103
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION . )  index: 7 8    goto: 107
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
==>> state: 104
STATEMENT -> FOR ( EXPRESSIONLIST ) { STATEMENTLIST } .   index: 7 7    goto: -2
Reduce: STATEMENT -> FOR ( EXPRESSIONLIST ) { STATEMENTLIST }
==>> state: 105
FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST . }  index: 6 7    goto: 108
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: TYPE -> EPSILON
==>> state: 106
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION . ) STATEMENTLIST  index: 8 10    goto: 109
EXPRESSION -> EXPRESSION . = EXPRESSION  index: 1 3    goto: 47
EXPRESSION -> EXPRESSION . + EXPRESSION  index: 1 3    goto: 48
EXPRESSION -> EXPRESSION . - EXPRESSION  index: 1 3    goto: 49
EXPRESSION -> EXPRESSION . * EXPRESSION  index: 1 3    goto: 50
EXPRESSION -> EXPRESSION . / EXPRESSION  index: 1 3    goto: 51
EXPRESSION -> EXPRESSION . < EXPRESSION  index: 1 3    goto: 52
EXPRESSION -> EXPRESSION . > EXPRESSION  index: 1 3    goto: 53
EXPRESSION -> EXPRESSION . == EXPRESSION  index: 1 3    goto: 54
EXPRESSION -> EXPRESSION . != EXPRESSION  index: 1 3    goto: 55
EXPRESSION -> EXPRESSION . && EXPRESSION  index: 1 3    goto: 56
EXPRESSION -> EXPRESSION . || EXPRESSION  index: 1 3    goto: 57
EXPRESSION -> EXPRESSION . ++  index: 1 2    goto: 58
EXPRESSION -> EXPRESSION . --  index: 1 2    goto: 59
==>> state: 107
STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION ) .   index: 8 8    goto: -2
Reduce: STATEMENT -> REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )
==>> state: 108
FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST } .   index: 7 7    goto: -2
Reduce: FUN -> FUNCTION ( EXPRESSIONLIST ) { STATEMENTLIST }
==>> state: 109
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) . STATEMENTLIST  index: 9 10    goto: 110
STATEMENTLIST ->  . STATEMENT  index: 0 1    goto: 3
STATEMENTLIST ->  . STATEMENTLIST STATEMENT  index: 0 2    goto: 110
STATEMENTLIST -> EPSILON .   index: 1 1    goto: -2
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: STATEMENTLIST -> EPSILON
Reduce: TYPE -> EPSILON
==>> state: 110
IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST .   index: 10 10    goto: -2
STATEMENTLIST -> STATEMENTLIST . STATEMENT  index: 1 2    goto: 31
STATEMENT ->  . VARIABLE ;  index: 0 2    goto: 2
STATEMENT ->  . VARIABLE = ASSIGN  index: 0 3    goto: 2
STATEMENT ->  . IFSTMT  index: 0 1    goto: 4
STATEMENT ->  . REPEAT { STATEMENTLIST } UNTIL ( EXPRESSION )  index: 0 8    goto: 9
STATEMENT ->  . FOR ( EXPRESSIONLIST ) { STATEMENTLIST }  index: 0 7    goto: 10
STATEMENT ->  . FOR ( EXPRESSIONLIST ) STATEMENT  index: 0 5    goto: 10
STATEMENT ->  . RETURN EXPRESSION  index: 0 2    goto: 12
STATEMENT ->  . BREAK ;  index: 0 2    goto: 11
STATEMENT ->  . ;  index: 0 1    goto: 14
STATEMENT ->  . #  index: 0 1    goto: 15
VARIABLE ->  . TYPE IDENTIFIER  index: 0 2    goto: 5
VARIABLE ->  . VARIABLE , VARIABLE  index: 0 3    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ]  index: 0 4    goto: 2
VARIABLE ->  . VARIABLE [ INDEX ] [ INDEX ]  index: 0 7    goto: 2
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST  index: 0 5    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST  index: 0 10    goto: 8
IFSTMT ->  . IF ( EXPRESSION ) STATEMENTLIST ELSE STATEMENTLIST  index: 0 7    goto: 8
TYPE ->  . INTEGER  index: 0 1    goto: 6
TYPE ->  . DOUBLE  index: 0 1    goto: 7
TYPE -> EPSILON .   index: 1 1    goto: -2
Reduce: IFSTMT -> IF ( EXPRESSION ) STATEMENTLIST ELSEIF ( EXPRESSION ) STATEMENTLIST
Reduce: TYPE -> EPSILON
