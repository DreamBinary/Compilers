program -> variable
variable -> variable ; | type identifier | type identifier = expression | type identifier = fun | type identifier , variable | type identifier [ int ] | type identifier [ int ] [ int ]
fun -> variable ( expressionList ) { statementList } | variable ( expressionList ) | function ( expressionList ) { statementList } | function ( expressionList )
type -> integer | double | epsilon
statementList -> statement | statementList statement | epsilon
statement -> variable |  if ( expression ) statement |  if ( expression ) statement else statement | if ( expression ) statement else if ( expression ) statement | repeat { statementList } until ( expression ) | for ( expressionList ) { statementList } | for ( expressionList ) statement | return expression ; | break ; | ;
expressionList -> expression | expressionList ; expression | expressionList , expression
expression -> variable | expression + expression | expression - expression | expression * expression | expression / expression | expression < expression | expression > expression | expression == expression | expression != expression | expression && expression | expression || expression | expression ++ | expression -- | ( expression )
